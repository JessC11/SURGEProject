{"ast":null,"code":"var _jsxFileName = \"/Users/rbe54/Documents/proj-practice/React-Search/src/views/Searching.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport ProgrammeCard from '../components/ProgrammeCard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useMediaQuery } from 'react-responsive';\nimport ProgrammeCardList from '../components/ProgrammeCardList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Searching = () => {\n  _s();\n\n  // static programme data\n  const [data, setData] = useState([{\n    src: \"https://assets-prd.ignimgs.com/2022/01/14/gameofthrones-allseasons-sq-1642120207458.jpg\",\n    alt: \"game of thrones: split\",\n    linkTo: \"/discover?city=Split\"\n  }, {\n    src: \"https://assets-prd.ignimgs.com/2022/01/14/gameofthrones-allseasons-sq-1642120207458.jpg\",\n    alt: \"game of thrones: dubrovnik\",\n    linkTo: \"/discover?city=Dubrovnik\"\n  }, {\n    src: \"https://flxt.tmsimg.com/assets/p8282918_b_v13_bk.jpg\",\n    alt: \"the walking dead: atlanta\",\n    linkTo: \"/discover?city=Atlanta\"\n  }, {\n    src: \"https://m.media-amazon.com/images/I/91NNuqAp73L._AC_SL1500_.jpg\",\n    alt: \"stranger things: vilnus\",\n    linkTo: \"/discover?city=Vilnus\"\n  }, {\n    src: \"https://flxt.tmsimg.com/assets/p185846_b_h9_ad.jpg\",\n    alt: \"breaking bad: new mexico\",\n    linkTo: \"/discover?city=NewMexico\"\n  }, {\n    src: \"https://flxt.tmsimg.com/assets/p20492218_b_h9_aa.jpg\",\n    alt: \"squid game: daejon\",\n    linkTo: \"/discover?city=Daejon\"\n  }, {\n    src: \"https://m.media-amazon.com/images/M/MV5BOTdlNzdlZWQtZTU5MS00N2RkLWJjYTAtYzY5NWEwMmMyZDM1XkEyXkFqcGdeQXVyNDk3ODk4OQ@@._V1_.jpg\",\n    alt: \"ted lasso: london\",\n    linkTo: \"/discover?city=London\"\n  }, {\n    src: \"https://image.tmdb.org/t/p/original//reEMJA1uzscCbkpeRJeTT2bjqUp.jpg\",\n    alt: \"money heist: madrid\",\n    linkTo: \"/discover?city=Madrid\"\n  }]); // var COLS = 5;\n  // var ROWS = Math.round(data.length/COLS)+1;\n  // filter images based on input text\n\n  function filter(e) {\n    let text = e.target.value.toLowerCase(); // get all cards in the image container grid\n\n    var container = document.querySelector(\".imgContainer\");\n    let cards = container.getElementsByClassName(\"card\");\n\n    for (let i = 0; i < cards.length; i++) {\n      // get the image and test input against alt text\n      let img = cards[i].getElementsByTagName(\"img\");\n\n      if (new RegExp(text).test(img[0].alt)) {\n        cards[i].style.display = 'inline';\n      } else {\n        cards[i].style.display = 'none';\n      }\n    }\n  } // media queries for responsiveness\n\n\n  const isFiveCols = useMediaQuery({\n    query: '(max-width: 15450px)'\n  });\n  const isFourCols = useMediaQuery({\n    query: '(max-width: 1400px)'\n  });\n  const isThreeCols = useMediaQuery({\n    query: '(max-width: 1200px)'\n  });\n  const isTwoCols = useMediaQuery({\n    query: '(max-width: 850px)'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"programmeInput\",\n        placeholder: \"Search for a programme...\",\n        onInput: e => filter(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), isFiveCols && !isFourCols && !isThreeCols && !isTwoCols && /*#__PURE__*/_jsxDEV(ProgrammeCardList, {\n        data: data,\n        COLS: 5,\n        ROWS: Math.round(data.length / 5) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 77\n      }, this), isFiveCols && isFourCols && !isThreeCols && !isTwoCols && /*#__PURE__*/_jsxDEV(ProgrammeCardList, {\n        data: data,\n        COLS: 4,\n        ROWS: Math.round(data.length / 4) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 76\n      }, this), isFiveCols && isFourCols && isThreeCols && !isTwoCols && /*#__PURE__*/_jsxDEV(ProgrammeCardList, {\n        data: data,\n        COLS: 3,\n        ROWS: Math.round(data.length / 3) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 75\n      }, this), isFiveCols && isFourCols && isThreeCols && isTwoCols && /*#__PURE__*/_jsxDEV(ProgrammeCardList, {\n        data: data,\n        COLS: 2,\n        ROWS: Math.round(data.length / 2) + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 74\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Searching, \"l3z2zZR6CjaPFHfyd7XomKza4NA=\", false, function () {\n  return [useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery];\n});\n\n_c = Searching;\nexport default Searching;\n\nvar _c;\n\n$RefreshReg$(_c, \"Searching\");","map":{"version":3,"names":["useState","useEffect","ProgrammeCard","useMediaQuery","ProgrammeCardList","Searching","data","setData","src","alt","linkTo","filter","e","text","target","value","toLowerCase","container","document","querySelector","cards","getElementsByClassName","i","length","img","getElementsByTagName","RegExp","test","style","display","isFiveCols","query","isFourCols","isThreeCols","isTwoCols","Math","round"],"sources":["/Users/rbe54/Documents/proj-practice/React-Search/src/views/Searching.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport ProgrammeCard from '../components/ProgrammeCard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {useMediaQuery} from 'react-responsive';\nimport ProgrammeCardList from '../components/ProgrammeCardList'\n\nconst Searching = () => {\n\n    // static programme data\n    const [data, setData] = useState([\n        {\n            src: \"https://assets-prd.ignimgs.com/2022/01/14/gameofthrones-allseasons-sq-1642120207458.jpg\",\n            alt: \"game of thrones: split\",\n            linkTo: \"/discover?city=Split\"\n        },\n        {\n            src: \"https://assets-prd.ignimgs.com/2022/01/14/gameofthrones-allseasons-sq-1642120207458.jpg\",\n            alt: \"game of thrones: dubrovnik\",\n            linkTo: \"/discover?city=Dubrovnik\"\n        },\n        {\n            src: \"https://flxt.tmsimg.com/assets/p8282918_b_v13_bk.jpg\",\n            alt: \"the walking dead: atlanta\",\n            linkTo: \"/discover?city=Atlanta\"\n        },\n        {\n            src: \"https://m.media-amazon.com/images/I/91NNuqAp73L._AC_SL1500_.jpg\",\n            alt: \"stranger things: vilnus\",\n            linkTo: \"/discover?city=Vilnus\"\n        },\n        {\n            src: \"https://flxt.tmsimg.com/assets/p185846_b_h9_ad.jpg\",\n            alt: \"breaking bad: new mexico\",\n            linkTo: \"/discover?city=NewMexico\"\n        },\n        {\n            src: \"https://flxt.tmsimg.com/assets/p20492218_b_h9_aa.jpg\",\n            alt: \"squid game: daejon\",\n            linkTo: \"/discover?city=Daejon\"\n        },\n        {\n            src: \"https://m.media-amazon.com/images/M/MV5BOTdlNzdlZWQtZTU5MS00N2RkLWJjYTAtYzY5NWEwMmMyZDM1XkEyXkFqcGdeQXVyNDk3ODk4OQ@@._V1_.jpg\",\n            alt: \"ted lasso: london\",\n            linkTo: \"/discover?city=London\"\n        },\n        {\n            src: \"https://image.tmdb.org/t/p/original//reEMJA1uzscCbkpeRJeTT2bjqUp.jpg\",\n            alt: \"money heist: madrid\",\n            linkTo: \"/discover?city=Madrid\"\n        }\n    ])\n\n    // var COLS = 5;\n    // var ROWS = Math.round(data.length/COLS)+1;\n\n\n    // filter images based on input text\n    function filter(e) {\n        let text = (e.target.value).toLowerCase();\n        // get all cards in the image container grid\n        var container = document.querySelector(\".imgContainer\");\n        let cards = container.getElementsByClassName(\"card\");\n        for (let i = 0; i < cards.length; i++) {\n            // get the image and test input against alt text\n            let img = cards[i].getElementsByTagName(\"img\");\n            if (new RegExp(text).test(img[0].alt)) {\n                cards[i].style.display = 'inline';\n            } else {\n                cards[i].style.display = 'none';\n            }\n        }\n    }\n\n    // media queries for responsiveness\n    const isFiveCols = useMediaQuery({ query: '(max-width: 15450px)' })\n    const isFourCols = useMediaQuery({ query: '(max-width: 1400px)' })\n    const isThreeCols = useMediaQuery({ query: '(max-width: 1200px)' })\n    const isTwoCols = useMediaQuery({ query: '(max-width: 850px)' })\n\n    return (\n        <div className=\"container\">\n\n            <div className=\"inputContainer\">\n\n                <input type=\"text\" className=\"programmeInput\" placeholder=\"Search for a programme...\" onInput={(e) => filter(e)}></input>\n\n                {/* display component based on the defined media queries */}\n                {isFiveCols && !isFourCols && !isThreeCols && !isTwoCols && <ProgrammeCardList data={data} COLS={5} ROWS={Math.round(data.length/5)+1}/>}\n                {isFiveCols && isFourCols && !isThreeCols && !isTwoCols && <ProgrammeCardList data={data} COLS={4} ROWS={Math.round(data.length/4)+1}/>}\n                {isFiveCols && isFourCols && isThreeCols && !isTwoCols && <ProgrammeCardList data={data} COLS={3} ROWS={Math.round(data.length/3)+1}/>}\n                {isFiveCols && isFourCols && isThreeCols && isTwoCols && <ProgrammeCardList data={data} COLS={2} ROWS={Math.round(data.length/2)+1}/>}\n                \n            </div>\n\n        </div>\n    )\n\n}\n\nexport default Searching;"],"mappings":"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"},"metadata":{},"sourceType":"module"}